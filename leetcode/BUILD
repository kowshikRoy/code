cc_library(
    name = "longest_substring_without_repeating_characters",
    srcs = ["longest_substring_without_repeating_characters.cc"],
    hdrs = ["longest_substring_without_repeating_characters.h"],
)

cc_test(
    name = "longest_substring_without_repeating_characters_test",
    srcs = ["longest_substring_without_repeating_characters_test.cc"],
    deps = [
        ":longest_substring_without_repeating_characters",
        "@googletest//:gtest",
        "@googletest//:gtest_main",
    ],
)

cc_library(
    name = "integer_to_roman",
    srcs = ["integer_to_roman.cc"],
    hdrs = ["integer_to_roman.h"],
)

cc_test(
    name = "integer_to_roman_test",
    srcs = ["integer_to_roman_test.cc"],
    deps = [
        ":integer_to_roman",
        "@googletest//:gtest",
        "@googletest//:gtest_main",
    ],
)

cc_library(
    name = "roman_to_integer",
    srcs = ["roman_to_integer.cc"],
    hdrs = ["roman_to_integer.h"],
)

cc_test(
    name = "roman_to_integer_test",
    srcs = ["roman_to_integer_test.cc"],
    deps = [
        ":roman_to_integer",
        "@googletest//:gtest",
        "@googletest//:gtest_main",
    ],
)

cc_library(
    name = "letter_combinations_of_a_phone_number",
    srcs = ["letter_combinations_of_a_phone_number.cc"],
    hdrs = ["letter_combinations_of_a_phone_number.h"],
)

cc_test(
    name = "letter_combinations_of_a_phone_number_test",
    srcs = ["letter_combinations_of_a_phone_number_test.cc"],
    deps = [
        ":letter_combinations_of_a_phone_number",
        "@googletest//:gtest",
        "@googletest//:gtest_main",
    ],
)

cc_library(
    name = "substring-with-concatenation-of-all-words",
    srcs = ["substring-with-concatenation-of-all-words.cc"],
    hdrs = [
        "debug.h",
        "substring-with-concatenation-of-all-words.h",
    ],
)

cc_test(
    name = "substring-with-concatenation-of-all-words-test",
    srcs = ["substring-with-concatenation-of-all-words-test.cc"],
    deps = [
        ":substring-with-concatenation-of-all-words",
        "@googletest//:gtest",
        "@googletest//:gtest_main",
    ],
)

cc_library(
    name = "first-unique-character-in-a-string",
    srcs = ["first-unique-character-in-a-string.cc"],
    hdrs = ["first-unique-character-in-a-string.h"],
)

cc_test(
    name = "first-unique-character-in-a-string-test",
    srcs = ["first-unique-character-in-a-string-test.cc"],
    deps = [
        ":first-unique-character-in-a-string",
        "@googletest//:gtest",
        "@googletest//:gtest_main",
    ],
)

cc_library(
    name = "find-the-difference",
    srcs = ["find-the-difference.cc"],
    hdrs = ["find-the-difference.h"],
)

cc_test(
    name = "find-the-difference-test",
    srcs = ["find-the-difference-test.cc"],
    deps = [
        ":find-the-difference",
        "@googletest//:gtest",
        "@googletest//:gtest_main",
    ],
)

cc_library(
    name = "set-mismatch",
    srcs = ["set-mismatch.cc"],
    hdrs = ["set-mismatch.h"],
)

cc_test(
    name = "set-mismatch-test",
    srcs = ["set-mismatch-test.cc"],
    deps = [
        ":set-mismatch",
        "@googletest//:gtest",
        "@googletest//:gtest_main",
    ],
)

cc_library(
    name = "single-number",
    srcs = ["single-number.cc"],
    hdrs = ["single-number.h"],
)

cc_test(
    name = "single-number-test",
    srcs = ["single-number-test.cc"],
    deps = [
        ":single-number",
        "@googletest//:gtest",
        "@googletest//:gtest_main",
    ],
)

cc_library(
    name = "contiguous-array",
    srcs = ["contiguous-array.cc"],
    hdrs = ["contiguous-array.h"],
)

cc_test(
    name = "contiguous-array-test",
    srcs = ["contiguous-array-test.cc"],
    deps = [
        ":contiguous-array",
        "@googletest//:gtest",
        "@googletest//:gtest_main",
    ],
)

cc_test(
    name = "jewels-and-stones",
    srcs = ["jewels-and-stones.cc"],
    deps = [
        "@googletest//:gtest",
        "@googletest//:gtest_main",
    ],
)

cc_test(
    name = "maximum-number-of-balloons",
    srcs = ["maximum-number-of-balloons.cc"],
    deps = [
        "@googletest//:gtest",
        "@googletest//:gtest_main",
    ],
)

cc_test(
    name = "4sum_test",
    srcs = ["4sum.cc"],
    copts = ["-std=c++17"],
    deps = [
        "@googletest//:gtest",
        "@googletest//:gtest_main",
    ],
)

cc_test(
    name = "h-index_test",
    srcs = ["h-index.cc"],
    copts = ["-std=c++17"],
    deps = [
        "@googletest//:gtest",
        "@googletest//:gtest_main",
    ],
)

cc_test(
    name = "find-common-characters_test",
    srcs = ["find-common-characters.cc"],
    copts = ["-std=c++17"],
    deps = [
        "@googletest//:gtest",
        "@googletest//:gtest_main",
    ],
)

cc_test(
    name = "longest-palindrome",
    srcs = ["longest-palindrome.cc"],
    copts = ["-std=c++17"],
    deps = [
        "@googletest//:gtest",
        "@googletest//:gtest_main",
    ],
)

cc_test(
    name = "word-pattern",
    srcs = ["word-pattern.cc"],
    copts = ["-std=c++17"],
    deps = [
        "@googletest//:gtest",
        "@googletest//:gtest_main",
    ],
)

cc_test(
    name = "unique-number-of-occurrences_test",
    srcs = ["unique-number-of-occurrences.cc"],
    copts = ["-std=c++17"],
    deps = [
        "@googletest//:gtest",
        "@googletest//:gtest_main",
    ],
)

cc_test(
    name = "brick-wall",
    srcs = ["brick-wall.cc"],
    copts = ["-std=c++17"],
    deps = [
        "@googletest//:gtest",
        "@googletest//:gtest_main",
    ],
)

cc_test(
    name = "subarray-sum-equals-k",
    srcs = ["subarray-sum-equals-k.cc"],
    copts = ["-std=c++17"],
    deps = [
        "@googletest//:gtest",
        "@googletest//:gtest_main",
    ],
)

cc_test(
    name = "group-anagrams",
    srcs = ["group-anagrams.cc"],
    copts = ["-std=c++17"],
    deps = [
        "@googletest//:gtest",
        "@googletest//:gtest_main",
    ],
)

cc_test(
    name = "find-all-anagrams-in-a-string_test",
    srcs = ["find-all-anagrams-in-a-string.cc"],
    copts = ["-std=c++17"],
    deps = [
        "@googletest//:gtest",
        "@googletest//:gtest_main",
    ],
)

cc_test(
    name = "number-of-boomerangs",
    srcs = ["number-of-boomerangs.cc"],
    copts = ["-std=c++17"],
    deps = [
        "@googletest//:gtest",
        "@googletest//:gtest_main",
    ],
)

cc_test(
    name = "distribute-candies",
    srcs = ["distribute-candies.cc"],
    copts = ["-std=c++17"],
    deps = [
        "@googletest//:gtest",
        "@googletest//:gtest_main",
    ],
)

cc_test(
    name = "sort-characters-by-frequency",
    srcs = ["sort-characters-by-frequency.cc"],
    copts = ["-std=c++17"],
    deps = [
        "@googletest//:gtest",
        "@googletest//:gtest_main",
    ],
)

cc_test(
    name = "happy-number",
    srcs = ["happy-number.cc"],
    deps = [
        "@googletest//:gtest_main",
    ],
)